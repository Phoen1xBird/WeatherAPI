services:
  db:
    image: postgres:14-alpine
    container_name: weather-db
    environment:
      - DATABASE_HOST=${POSTGRES_HOST}
      - DATABASE_PORT=${POSTGRES_PORT}
      - DATABASE_LOGIN=${POSTGRES_USER}
      - PGUSER=${POSTGRES_USER}
      - DATABASE_PASSWORD=${POSTGRES_PW}
      - DATABASE_NAME=${POSTGRES_DB}
    restart: on-failure
    volumes:
      - db:/var/lib/postgresql/data
    ports:
      - "${DB_PORT}:5432"
    command: postgres -c timezone=Europe/Moscow
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-U", "${POSTGRES_USER}" ]
      interval: 2s
      timeout: 2s
      retries: 3
    networks: [weather_net]

  weather-backend:
    build:
      context: ./src
      dockerfile: Dockerfile
    container_name: weather-backend
    ports:
      - ${BACKEND_PORT}:8000
    environment:
      - OPEN_WEATHER_KEY=${OPEN_WEATHER_KEY}
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_PORT=${DATABASE_PORT}
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_LOGIN=${DATABASE_LOGIN}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
    depends_on:
      db:
        condition: service_healthy
    networks: [weather_net]

networks:
  weather_net:
    external: false

volumes:
  db: